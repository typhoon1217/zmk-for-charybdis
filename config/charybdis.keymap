#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <0>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <21 20>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 21>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <25 26>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <44 43>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <45 46>;
        };

        more {
            bindings = <&kp GREATER_THAN>;
            key-positions = <47 46>;
        };

        tog1 {
            bindings = <&tog 1>;
            key-positions = <48 25>;
        };

        tog2 {
            bindings = <&tog 2>;
            key-positions = <48 26>;
        };

        tog3 {
            bindings = <&tog 3>;
            key-positions = <27 48>;
        };

        tog0 {
            bindings = <&tog 0>;
            key-positions = <48 24>;
        };

        grav {
            bindings = <&kp GRAVE>;
            key-positions = <13 14>;
        };

        alt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <48 49>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&trans     &trans  &trans  &trans     &trans     &trans          &trans       &trans         &trans     &trans   &trans      &trans
&kp ESC    &kp Q   &kp W   &kp E      &kp R      &kp T           &kp Y        &kp U          &kp I      &kp O    &kp P       &kp BACKSLASH
&kp LSHFT  &kp A   &kp S   &kp D      &kp F      &kp G           &kp H        &kp J          &kp K      &kp L    &lt 3 SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C      &kp V      &kp B           &kp N        &kp M          &kp COMMA  &kp DOT  &kp SLASH   &kp LANG_HANGEUL
                           &lt 1 TAB  &kp SPACE  &kp LEFT_GUI    &lt 2 ENTER  &kp BACKSPACE
                                      &trans     &trans          &trans
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        layer_1 {
            bindings = <
&trans      &trans            &trans        &trans        &trans        &trans               &trans     &trans         &trans   &trans   &trans   &trans
&kp GRAVE   &kp LEFT_BRACKET  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACKET    &kp INS    &kp F1         &kp F2   &kp F3   &kp F4   &kp DEL
&kp LSHIFT  &kp SEMI          &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BACKSLASH        &kp PG_UP  &kp F5         &kp F6   &kp F7   &kp F8   &kp PAGE_UP
&kp LCTRL   &kp GRAVE         &kp N7        &kp N8        &kp N9        &kp MINUS            &kp PG_DN  &kp F9         &kp F10  &kp F11  &kp F12  &kp PAGE_DOWN
                                            &kp PERIOD    &kp N0        &kp EQUAL            &kp ENTER  &kp BACKSPACE
                                                          &none         &none                &trans
            >;
        };

        layer_2 {
            bindings = <
&none           &none                 &none             &none             &none             &none                    &none                   &none                 &none             &none              &none   &none
&kp LS(GRAVE)   &kp LS(LEFT_BRACKET)  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(RIGHT_BRACKET)    &kp LG(LEFT_ARROW)      &kp LG(UP_ARROW)      &kp LG(DOWN)      &kp LG(RIGHT)      &trans  &trans
&kp LEFT_SHIFT  &kp LS(SEMICOLON)     &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp LS(BACKSLASH)        &kp LEFT_ARROW          &kp UP_ARROW          &kp DOWN          &kp RIGHT          &trans  &trans
&kp LCTRL       &kp LS(GRAVE)         &kp LS(N7)        &kp LS(N8)        &kp LS(N9)        &kp LS(MINUS)            &kp LG(LC(LEFT_ARROW))  &kp LG(LC(UP_ARROW))  &kp LG(LC(DOWN))  &kp LG(LC(RIGHT))  &trans  &trans
                                                        &kp LEFT_ALT      &kp LC(N0)        &kp LS(EQUAL)            &trans                  &trans
                                                                          &trans            &trans                   &none
            >;
        };

        Mouse {
            bindings = <
&none   &none         &none         &none         &none         &none         &none      &none      &none         &none      &none      &none
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &kp LC(Y)  &kp LEFT   &kp UP_ARROW  &kp RIGHT  &trans     &kp DELETE
&trans  &kp LC(A)     &kp LC(S)     &kp LC(D)     &kp LC(F)     &kp LC(G)     &kp LC(H)  &mkp LCLK  &mkp MCLK     &mkp RCLK  &trans     &trans
&trans  &kp LC(Z)     &kp LC(X)     &kp LC(C)     &kp LC(V)     &kp LC(B)     &kp RC(N)  &mkp MB4   &kp DOWN      &mkp MB5   &kp EQUAL  &kp GREATER_THAN
                                    &trans        &trans        &trans        &kp LC(C)  &kp LC(V)
                                                  &none         &trans        &trans
            >;
        };
    };
};
