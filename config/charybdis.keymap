#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h> 

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        escc {
            bindings = <&kp ESC>;
            key-positions = <17 18>;
            layers = <0>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <21 20>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <22 21>;
        };

        caps {
            bindings = <&kp CAPS>;
            key-positions = <25 24>;
        };

        less {
            bindings = <&kp LESS_THAN>;
            key-positions = <44 43>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <45 46>;
        };

        more {
            bindings = <&kp GREATER_THAN>;
            key-positions = <47 46>;
        };

        grav {
            bindings = <&kp GRAVE>;
            key-positions = <13 14>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <44 45>;
        };

        lbk {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 15>;
        };

        rbk {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <17 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&trans     &trans          &trans       &trans     &trans     &trans              &trans            &trans       &trans     &trans       &trans       &trans
&kp GRAVE  &kp Q           &kp W        &kp E      &kp R      &kp T               &kp Y             &kp U        &kp I      &kp O        &kp P        &kp BACKSLASH
&kp LSHFT  &mt LEFT_ALT A  &mt LCTRL S  &lt 2 D    &lt 1 F    &mt LEFT_SHIFT G    &mt LEFT_SHIFT H  &lt 1 J      &lt 2 K    &mt LCTRL L  &lt 3 SEMI   &mt RIGHT_SHIFT SQT
&kp TAB    &kp Z           &kp X        &kp C      &kp V      &kp B               &kp N             &kp M        &kp COMMA  &kp DOT      &lt 4 SLASH  &kp LANG_HANGEUL
                                        &lt 1 ESC  &kp SPACE  &kp LEFT_GUI        &kp BACKSPACE     &lt 2 ENTER
                                                   &trans     &trans              &trans
            >;

            trackball-bindings = <&tmv_coarse>;
        };

        numfn {
            bindings = <
&trans      &trans                     &trans              &trans        &trans        &trans                          &trans     &trans  &trans   &trans        &trans           &trans
&kp GRAVE   &kp COMMA                  &kp NUMBER_1        &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD                      &kp HOME   &kp F1  &kp F2   &kp F3        &kp F4           &kp LEFT_ALT
&kp LSHIFT  &mt LEFT_ALT LEFT_BRACKET  &mt LCTRL NUMBER_4  &kp N5        &kp NUMBER_6  &mt LEFT_SHIFT RIGHT_BRACKET    &kp PG_UP  &kp F5  &kp F6   &mt LCTRL F7  &mt LEFT_ALT F8  &kp RIGHT_SHIFT
&kp TAB     &kp GRAVE                  &kp N7              &kp N8        &kp N9        &kp MINUS                       &kp PG_DN  &kp F9  &kp F10  &kp F11       &kp F12          &kp LCTRL
                                                           &kp PERIOD    &kp N0        &mt LEFT_GUI EQUAL              &trans     &trans
                                                                         &none         &none                           &trans
            >;
        };

        spenav {
            bindings = <
&none           &none                    &none             &none                      &none             &none                         &none           &none           &none         &none      &none             &none
&kp TILDE       &kp LESS_THAN            &kp LS(NUMBER_1)  &kp LS(NUMBER_2)           &kp LS(NUMBER_3)  &kp GREATER_THAN              &kp LC(T)       &kp INS         &kp PG_UP     &kp HOME   &kp LG(LEFT_ALT)  &kp PRINTSCREEN
&kp LEFT_SHIFT  &mt LEFT_ALT LEFT_BRACE  &mt LCTRL DOLLAR  &kp LS(N5)                 &kp LS(NUMBER_6)  &mt LEFT_SHIFT RIGHT_BRACE    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp LEFT_GUI      &mt LCTRL LS(LEFT_WIN)
&kp TAB         &kp LS(GRAVE)            &kp LS(N7)        &kp LS(N8)                 &kp LS(N9)        &kp LS(MINUS)                 &kp LC(W)       &kp DELETE      &kp PG_DN     &kp END    &kp LG(LCTRL)     &kp LG(LEFT_SHIFT)
                                                           &mt LEFT_ALT GREATER_THAN  &kp LS(N0)        &mt LEFT_GUI PLUS             &kp LC(C)       &kp LC(V)
                                                                                      &trans            &trans                        &none
            >;
        };

        editMouse {
            bindings = <
&none        &none      &none      &none          &none      &none        &none      &none      &none         &none      &none             &none
&trans       &kp LC(Q)  &kp LC(W)  &kp LC(E)      &kp LC(R)  &kp LC(T)    &kp LC(Y)  &kp LEFT   &kp UP_ARROW  &kp RIGHT  &kp K_PLAY_PAUSE  &kp DELETE
&trans       &kp END    &kp HOME   &kp PAGE_DOWN  &kp PG_UP  &kp LC(G)    &kp LEFT   &mkp LCLK  &mkp MCLK     &mkp RCLK  &trans            &kp C_PLAY_PAUSE
&kp LC(TAB)  &kp LC(Z)  &kp LC(X)  &kp LC(C)      &kp LC(V)  &kp LC(B)    &kp LC(Z)  &mkp MB4   &kp DOWN      &mkp MB5   &kp EQUAL         &kp GREATER_THAN
                                   &trans         &trans     &trans       &kp LC(C)  &kp LC(V)
                                                  &none      &trans       &trans
            >;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans                &trans                &trans            &trans              &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0          &bt BT_SEL 1          &bt BT_SEL 2      &bt BT_SEL 3        &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOLUME_UP       &kp C_PREVIOUS        &kp C_MUTE        &kp C_NEXT          &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_VOL_DN          &kp C_REWIND          &kp C_PLAY_PAUSE  &kp C_FAST_FORWARD  &trans        &trans
                        &trans  &trans  &trans    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC
                                &trans  &trans    &trans
            >;
        };
    };
};
